name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "production"]
  pull_request:
    branches: [ "main", "production" ]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'

    steps:
    - name: Checkout code
      uses: actions/checkout@v1.0.0

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore
  
  test: 
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'

    steps:
      - name: Checkout code
        uses: actions/checkout@v1.0.0

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x  
    
      - name: Restore dependencies
        run: dotnet restore 

      - name: Start MongoDB container
        run: |
          docker run --name mongo -p 27017:27017 -d mongodb/mongodb-community-server:latest
          docker ps -a
  
      - name: Setup environment
        run: |
          echo "CONNECTION_STRING=${{secrets.CONNECTION_STRING}}" >> $GITHUB_ENV
          echo "DB_NAME=${{secrets.DB_NAME}}" >> $GITHUB_ENV
          echo "AUTH_COLLECTION_NAME=${{secrets.AUTH_COLLECTION_NAME}}" >> $GITHUB_ENV
          echo "USERS_COLLECTION_NAME=${{secrets.USERS_COLLECTION_NAME}}" >> $GITHUB_ENV
          echo "LISTS_COLLECTION_NAME=${{secrets.LISTS_COLLECTION_NAME}}" >> $GITHUB_ENV
          echo "CARDS_COLLECTION_NAME=${{secrets.CARDS_COLLECTION_NAME}}" >> $GITHUB_ENV
          echo "VISITORS_COLLECTION_NAME=${{secrets.VISITORS_COLLECTION_NAME}}" >> $GITHUB_ENV
          echo "TOKEN_KEY=${{secrets.TOKEN_KEY}}" >> $GITHUB_ENV
          echo "PASSWORD_KEY=${{secrets.PASSWORD_KEY}}" >> $GITHUB_ENV

      - name: Run Tests
        working-directory: Kanbam.Test
        run: dotnet test --verbosity normal
                        
      - name: Stop Docker container
        run: | 
          docker stop mongo  
          docker ps -a


  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/production'

    steps:
    - name: Checkout code
      uses: actions/checkout@v1.0.0
      
    - name: Trigger Render Deployment
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl --request POST \
         --url "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
         --header "Accept: application/json" \
         --header "Authorization: Bearer ${RENDER_API_KEY}"

    - name: Set up Environment Variables
      run: |
        echo "RENDER_API_KEY=${{ secrets.RENDER_API_KEY }}" >> $GITHUB_ENV
        echo "RENDER_SERVICE_ID=${{ secrets.RENDER_SERVICE_ID }}" >> $GITHUB_ENV
 