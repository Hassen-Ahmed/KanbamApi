name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: > 
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3 

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x

    - name: Install MongoDB client tools
      run: |
        sudo apt-get update
        sudo apt-get install -y mongodb-clients

    - name: Wait for MongoDB to be ready
      run: |
        until mongo --eval "print(\"waited for connection\")"; do sleep 1; done

    
    - name: Setup environment
      run: |
        echo "DOTNET_ENVIRONMENT=test" >> $GITHUB_ENV
        echo "CONNECTION_STRING=mongodb://localhost:27017/KanbamTestDb" >> $GITHUB_ENV
        echo "DB_NAME=KanbamTestDb" >> $GITHUB_ENV
        echo "AUTH_COLLECTION_NAME=Auth" >> $GITHUB_ENV
        echo "USERS_COLLECTION_NAME=Users" >> $GITHUB_ENV
        echo "LISTS_COLLECTION_NAME=Lists" >> $GITHUB_ENV
        echo "CARDS_COLLECTION_NAME=Cards" >> $GITHUB_ENV
        
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      working-directory: KanbamApi
      run: dotnet build --configuration Release
    - name: Run Tests
      working-directory: Kanbam.Test
      run: dotnet test --verbosity normal

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Trigger Render Deployment
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl --request POST \
         --url "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
         --header "Accept: application/json" \
         --header "Authorization: Bearer ${RENDER_API_KEY}"

    - name: Set up Environment Variables
      run: |
        echo "RENDER_API_KEY=${{ secrets.RENDER_API_KEY }}" >> $GITHUB_ENV
        echo "RENDER_SERVICE_ID=${{ secrets.RENDER_SERVICE_ID }}" >> $GITHUB_ENV
    - name: Print Secrets Debug
      run: |
        echo "RENDER_API_KEY: $RENDER_API_KEY"
        echo "RENDER_SERVICE_ID: $RENDER_SERVICE_ID"