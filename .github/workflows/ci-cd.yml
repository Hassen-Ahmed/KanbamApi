name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore
  
  test: 
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x  
    
      - name: Restore dependencies
        run: dotnet restore 

      - name: Start MongoDB container
        run: |
          docker run --name mongo -p 27017:27017 -d mongodb/mongodb-community-server:latest
          docker ps -a
  
      - name: Setup environment
        run: |
          if [ -z "$CONNECTION_STRING" ]; then echo "CONNECTION_STRING is not set"; exit 1; fi
          if [ -z "$DB_NAME" ]; then echo "DB_NAME is not set"; exit 1; fi
          if [ -z "$AUTH_COLLECTION_NAME" ]; then echo "AUTH_COLLECTION_NAME is not set"; exit 1; fi
          if [ -z "$USERS_COLLECTION_NAME" ]; then echo "USERS_COLLECTION_NAME is not set"; exit 1; fi
          if [ -z "$LISTS_COLLECTION_NAME" ]; then echo "LISTS_COLLECTION_NAME is not set"; exit 1; fi
          if [ -z "$CARDS_COLLECTION_NAME" ]; then echo "CARDS_COLLECTION_NAME is not set"; exit 1; fi
          if [ -z "$TOKEN_KEY" ]; then echo "TOKEN_KEY is not set"; exit 1; fi
          if [ -z "$PASSWORD_KEY" ]; then echo "PASSWORD_KEY is not set"; exit 1; fi

        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
          DB_NAME: ${{ secrets.DB_NAME }}
          AUTH_COLLECTION_NAME: ${{ secrets.AUTH_COLLECTION_NAME }}
          USERS_COLLECTION_NAME: ${{ secrets.USERS_COLLECTION_NAME }}
          LISTS_COLLECTION_NAME: ${{ secrets.LISTS_COLLECTION_NAME }}
          CARDS_COLLECTION_NAME: ${{ secrets.CARDS_COLLECTION_NAME }}
          TOKEN_KEY: ${{ secrets.TOKEN_KEY }}
          PASSWORD_KEY: ${{ secrets.PASSWORD_KEY }}

      - name: Run Tests
        working-directory: Kanbam.Test
        run: dotnet test --verbosity normal
                        
      - name: Stop Docker container
        run: | 
          docker stop mongo  
          docker ps -a


  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Trigger Render Deployment
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl --request POST \
         --url "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
         --header "Accept: application/json" \
         --header "Authorization: Bearer ${RENDER_API_KEY}"

    - name: Set up Environment Variables
      run: |
        echo "RENDER_API_KEY=${{ secrets.RENDER_API_KEY }}" >> $GITHUB_ENV
        echo "RENDER_SERVICE_ID=${{ secrets.RENDER_SERVICE_ID }}" >> $GITHUB_ENV
    - name: Print Secrets Debug
      run: |
        echo "RENDER_API_KEY: $RENDER_API_KEY"
        echo "RENDER_SERVICE_ID: $RENDER_SERVICE_ID"